
# caminho do banco de dados
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/alura

# login e senha
spring.datasource.username=root
spring.datasource.password=admin

# linhas para teste de conectividade do usuário e senha
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# driver a ser utilizado no banco de dados
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# configurações do JPA

# mostra os comandos SQL executados na base de dados
spring.jpa.show-sql=true

# faz atualizações na tabela sem modificar os dados
# se utilizar 'create' o springboot apaga as tabelas e recria ao executar a aplicação
spring.jpa.hibernate.ddl-auto=update

# converte o nome padrão 'java' (aluraDatabase) para um padrão 'sql' (alura-database)
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy

# define o dialeto do maria db, para que habilite detalhes do jpa para este banco de dados
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# para acessar um banco mongodb
# spring.data.mongodb.uri: mongodb://{URL}:{PORTA}/{NOME_DO_BANCO}
# podemos informar também campo a campo
# spring.data.mongodb.username=root
# spring.data.mongodb.password=root
# spring.data.mongodb.database=test_db
# spring.data.mongodb.port=27017
# spring.data.mongodb.host=localhost
# utilizar a interface MongoRepository